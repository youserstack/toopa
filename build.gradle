plugins {
	id 'java'
	// id 'war'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.youserstack'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.1.3.RELEASE'

	// database
  implementation 'org.postgresql:postgresql'
  // runtimeOnly 'org.postgresql:postgresql'
	// implementation 'com.h2database:h2'
	// JPA 관련 (엔티티, @Column 등)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// runtimeOnly 'com.mysql:mysql-connector-j' // mysql driver

	// auth
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  // 유효성 검증용 (DTO, @Email, @NotBlank 등)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// development tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// logging
	developmentOnly 'org.slf4j:slf4j-api:2.0.17' // 로깅
	developmentOnly 'ch.qos.logback:logback-classic:1.5.18' // 로깅 구현체

	// jwt 검증
	// implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	// runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	// runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON parsing

	// jwe 검증
	implementation 'com.nimbusds:nimbus-jose-jwt:9.37'

	// env
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

}

// tasks.withType(JavaCompile) {
//     options.compilerArgs += '-parameters'
// }


tasks.named('test') {
	useJUnitPlatform()
}

// 스크립트
tasks.register('update') {
    doLast {
        exec {
            commandLine 'git', 'add', '.'
        }
        exec {
            commandLine 'git', 'commit', '-m', 'update'
        }
        exec {
            commandLine 'git', 'push'
        }
    }
}
